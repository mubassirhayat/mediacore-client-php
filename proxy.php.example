<?php

require_once dirname(__FILE__) . '/library.php';

// Configure your mediacore API credentials here.
// See below for hooking in your own authentication.

$mediacore_api_host = 'mysite.mediacore.tv';
$mediacore_api_ssl = true;

// API Authentication:
//
// In order to perform MediaCore API actions that require elevated permissions,
// you must configure a MediaCore user for this proxy to authenticate as when
// it sends requests to the MediaCore API.

// To authenticate with signed URLs (recommended), enter your keys below.
$mediacore_api_keys = array(
	'key_id' => '',
	'secret_key' => '',
);

// Alternately, to use Basic Auth, enter your username and password below.
// NOTE: You must enable SSL above for basic auth to work!
$mediacore_api_credentials = array(
	'username' => '',
	'password' => '',
);

/**
 * This function is passed to `mcore_proxy_api_call` and will be called once
 * it has determined what API call the user is requesting to be proxied. It's
 * recommended that you hook in your own authentication here to ensure you
 * would like to allow the API call request to proceed. It would be wise,
 * for example, to prevent users from submitting DELETE requests on media they
 * have no business editing, for example.
 *
 * @param string $method The request method.
 * @param string $path The API action path. Ex: /api/uploader/media
 * @param array $payload The parameters to send in the request.
 * @return boolean Whether the request should be allowed to proceed. If this
 *     returns false, the API call will not be made and a "403 Forbidden"
 *     response will be returned.
 */
function my_mediacore_auth_check($method, $path, $payload) {
	// For now, only allow access to the upload API.
	if (strpos($path, '/api/uploader/') !== 0) {
		return false;
	}
	return true;
}

// Allow the mediacore library to take care of the rest

mcore_proxy_api_call(
	$mediacore_api_host,
	'my_mediacore_auth_check',
	$mediacore_api_ssl,
	$mediacore_api_credentials,
	$mediacore_api_keys,
);
